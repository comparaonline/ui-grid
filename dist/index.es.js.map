{"version":3,"file":"index.es.js","sources":["../node_modules/classnames/index.js","../src/Grid/utils.js","../src/Grid/Row.js","../src/Grid/Column.js"],"sourcesContent":["/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import PropTypes from 'prop-types';\nimport breakpoints from '../breakpoints.json';\n\nconst bps = Object.keys(breakpoints);\n\nexport const bpPropClass = (bp, prop) => `${prop}On${bp.substr(0, 1).toUpperCase() + bp.substr(1)}`;\n\nconst getBooleanClassNames = (props, booleanProps) => booleanProps.reduce(\n  (names, prop) => names.concat(props[prop] ? ` ${prop}` : ''), '');\n\nconst getBreakpointClassName = (props, bp) => (props[bp] ? ` ${bp}-${props[bp]}` : '');\n\nconst getBreakpointNumericClassName = (props, numericProps, bp) => numericProps.reduce(\n  (names, prop) => {\n    const propValue = props[bpPropClass(bp, prop)];\n    return names.concat(propValue ? ` ${bp}-${prop}-${propValue}` : '');\n  }, '');\n\nconst getBreakpointBooleanClassName = (props, booleanProps, bp) => booleanProps.reduce(\n  (names, prop) => names.concat(props[bpPropClass(bp, prop)] ? ` ${bp}-${prop}` : ''), '');\n\nconst generateBreakpointClassNames = (props, propNames, bp) => ''.concat(\n  propNames.include ? getBreakpointClassName(props, bp) : '',\n  propNames.numeric ? getBreakpointNumericClassName(props, propNames.numeric, bp) : '',\n  propNames.boolean ? getBreakpointBooleanClassName(props, propNames.boolean, bp) : ''\n);\n\n/**\n * Generate string with classnames from props names and breakpoints\n *\n * @param {Object} props\n * @param {String Array} numericProps\n * @param {String Array} booleanProps\n * @param {Boolean} hasBreakpoint\n * @returns {String}\n */\nexport const generateClassNames = (props, propNames) => ''.concat(\n  propNames.boolean ? getBooleanClassNames(props, propNames.boolean) : '',\n  propNames.breakpoints ?\n    bps.reduce((className, bp) => className.concat(\n      generateBreakpointClassNames(props, propNames.breakpoints, bp)\n    ), '') : ''\n);\n\nconst getBooleanTypes = booleanProps => booleanProps.reduce(\n  (result, prop) => Object.assign(result, { [prop]: PropTypes.bool }), {});\n\nconst getBreakpointType = bp => ({ [bp]: PropTypes.number });\n\nconst getBreakpointGenericType = (props, bp, type) => props.reduce(\n  (result, prop) => Object.assign(result, { [bpPropClass(bp, prop)]: type }), {});\n\nconst generateBreakpointTypes = (propNames, bp) => Object.assign(\n  propNames.include ? getBreakpointType(bp) : {},\n  propNames.numeric ? getBreakpointGenericType(propNames.numeric, bp, PropTypes.number) : {},\n  propNames.boolean ? getBreakpointGenericType(propNames.boolean, bp, PropTypes.bool) : {}\n);\n\n/**\n * Generate object with prop types from props names and breakpoints\n *\n * @param {String Array} numericProps\n * @param {String Array} booleanProps\n * @param {Boolean} hasBreakpoint\n * @returns {Object}\n */\nexport const generatePropTypes = (propNames) =>\n  Object.assign(\n    propNames.boolean ? getBooleanTypes(propNames.boolean) : {},\n    bps.reduce((result, bp) => Object.assign(\n      result,\n      generateBreakpointTypes(propNames.breakpoints, bp)\n    ), {})\n  );\n","import React from 'react';\nimport cx from 'classnames';\nimport { generateClassNames, generatePropTypes } from './utils';\n\nexport const propNames = {\n  breakpoints: {\n    include: false,\n    numeric: ['up'],\n    boolean: ['collapse', 'uncollapse']\n  },\n  boolean: ['collapse', 'expanded']\n};\n\nconst Row = (props) => {\n  const className = cx(\n    `row${generateClassNames(props, propNames)}`,\n    { 'flex-row': props.equalHeightColumns },\n    props.className\n  );\n\n  return (\n    <div className={className}>\n      {props.children}\n    </div>\n  );\n};\n\nRow.propTypes = generatePropTypes(propNames);\n\nexport default Row;\n","import React from 'react';\nimport cx from 'classnames';\nimport { generateClassNames, generatePropTypes } from './utils';\n\nexport const propNames = {\n  breakpoints: {\n    include: true,\n    numeric: ['pull', 'push', 'offset'],\n    boolean: ['centered', 'uncentered']\n  }\n};\n\nconst Column = (props) => {\n  const className = cx(\n    props.className,\n    `column${generateClassNames(props, propNames)}`\n  );\n\n  return (\n    <div className={className}>{props.children}</div>\n  );\n};\n\nColumn.propTypes = generatePropTypes(propNames);\n\nexport default Column;\n"],"names":["classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","apply","key","hasOwn","call","join","hasOwnProperty","module","exports","window","bps","Object","keys","breakpoints","bpPropClass","bp","prop","substr","toUpperCase","getBooleanClassNames","props","booleanProps","reduce","names","concat","getBreakpointClassName","getBreakpointNumericClassName","numericProps","propValue","getBreakpointBooleanClassName","generateBreakpointClassNames","propNames","include","numeric","boolean","generateClassNames","className","getBooleanTypes","result","assign","PropTypes","bool","getBreakpointType","number","getBreakpointGenericType","type","generateBreakpointTypes","generatePropTypes","Row","cx","flex-row","equalHeightColumns","React","children","propTypes","Column"],"mappings":"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"}